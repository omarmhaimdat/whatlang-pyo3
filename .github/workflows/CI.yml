name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist --universal2
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - macos
      - windows
      - linux
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
      - name: Create a tag with version in the Cargo.toml file
        run: |
          VERSION=$(grep -oP '(?<=^version = ")[^"]+' Cargo.toml)
          git config --local user.email "omarmhaimdat@gmail.com"
          git config --local user.name "Omar MHAIMDAT"
          git tag "v$VERSION"
          git push --tags
      - name: Create GitHub release # Use the package version as the tag name and use commit as body
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - ${{ github.event.commits[0].message }}
          draft: false
          prerelease: false
